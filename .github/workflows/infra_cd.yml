name: Infrastructure Deployment

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2


      # Get the artifact ID from the triggering workflow
      - name: Find State Artifact
        id: find-artifact
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data } = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{ github.event.workflow_run.id }},
              });
              
              const artifact = data.artifacts.find(a => a.name === 'terraform-state');
              if (!artifact) {
                console.log('Artifact not found - this may be the first run');
                core.setOutput('artifact_exists', 'false');
              } else {
                core.setOutput('artifact_id', artifact.id);
                core.setOutput('artifact_exists', 'true');
              }
            } catch (error) {
              core.setFailed('Error fetching artifacts:' + error.message);
            }


      # Download the artifact if it exists
      - name: Download State Artifact
        if: steps.find-artifact.outputs.artifact_exists == 'true'
        uses: actions/download-artifact@v4
        with:
          id: ${{ steps.find-artifact.outputs.artifact_id }}
          path: infra/dev/
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Rest of your workflow...
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        run: terraform -chdir=infra/dev init

      - name: Apply Infrastructure
        run: terraform -chdir=infra/dev apply -auto-approve -input=false

      - name: Upload State Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: infra/dev/terraform.tfstate*
          if-no-files-found: error
          retention-days: 7



