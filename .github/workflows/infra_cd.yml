name: Infrastructure Deployment

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get Artifact ID
        id: get-artifact
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });
            const artifact = data.artifacts.find(a => a.name === 'terraform-state');
            if (!artifact) {
              core.setFailed('Artifact not found');
              return '';
            }
            core.setOutput('artifact_id', artifact.id);
            return artifact.id;


      # Then download using the specific artifact ID
      - name: Download State Artifact
        if: steps.get-artifact.outputs.artifact_id != ''
        uses: actions/download-artifact@v4
        with:
          id: ${{ steps.get-artifact.outputs.artifact_id }}
          path: infra/dev/
          github-token: ${{ secrets.GITHUB_TOKEN }}




      - uses: hashicorp/setup-terraform@v3
      - name: Download State Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: infra/dev/
        continue-on-error: true


      - name: Initialize Terraform
        run: terraform -chdir=infra/dev init

      - name: Apply Infrastructure
        run: terraform -chdir=infra/dev apply -auto-approve -input=false


      - name: Upload State Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: infra/dev/terraform.tfstate*  # The * captures both files
          if-no-files-found: error  # Fail if state files are missing
          retention-days: 7


