name: Project Deployment

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Infrastructure Deployment"]
    types: [completed]

env:
  AWS_REGION: us-east-2
  S3_BUCKET: s2ranjan
  DOCKER_IMAGE: optionchain-app
  EC2_INSTANCE_TAG: Nano-EC2-Instance



jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get EC2 Instance Info
        id: ec2-info
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=${{ env.EC2_INSTANCE_TAG }}" \
                      "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --output text)
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

      - name: Deploy via AWS Systems Manager (SSM)
        run: |
            SCRIPT_CONTENT=$(cat infra/dev/deploy.sh)
            aws ssm send-command \
              --instance-ids ${{ steps.ec2-info.outputs.instance_id }} \
              --document-name "AWS-RunShellScript" \
              --parameters "commands=[$(echo "$SCRIPT_CONTENT" | jq -s -R .)]" \
              --cloud-watch-output-config 'CloudWatchOutputEnabled=true' \
              --output text \
              --query "Command.CommandId"
            
            echo "Deployment command sent. Check AWS Systems Manager for output."
        
      - name: Verify Deployment
        run: |
          aws ssm send-command \
            --instance-ids ${{ steps.ec2-info.outputs.instance_id }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "docker ps",
              "curl -I http://localhost:80 || true"
            ]'

